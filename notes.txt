!!: When current level is chosen from menu, it doesn't actually update anything, need to manually update things?

1: get robot voice to record hundred, thousand, ten-ninety
    25, 50 and 75, then add in robot reading the scores out on highscore page



0: in non-shooting level:
    chill - good for non shooting level ------space-chillout-14194.mp3

    'wedge strike incoming' used for bouncer non-shooting level?

9: Create Music function which takes argument of level.current_level to say what song to play
    maybe a second argument about other conditions, for the survival level and maybe others, like
    feeding in the actual condition? e.g. I have an if variable:
    and feed in play_music(level.current_level, len(enemies>0))? look into it, or change method

3: when choosing a mode, game asks for Regular or Challenge mode. Regular has a healthbar for the player,
    create some effect on being hit (screenshake, changing colour of sprite etc), and updating health bar.

3: create new class TransitionScreen which shows score, press next to go to instruction screen
    if gauntlet_mode: load instructions for next level, otherwise go to high scores for level.current_level


2: create diagonal bullets, and with that naturally stop dual direction firing by holding two directions

3: Create a property of Wedge to make them fly completely straight, if want to use for challenge levels later,
    maybe not necessary

4: find some freeware 80s retro synth music, different for different stages, change tempo in endless mode as score rises

5: create/find bullet firing sound

6: when creating bullets, create parent class with future child classes in mind for different bullet types

7: create bomb class

8: remove the rotation angle for pieces that don't use it. if it's an Enemy function, see if there's a way to
create an if statement in the parent class based on child name

9b: Change Bouncer's code so that they don't re-direct until they hit their target, not a time limit
    Also change it to pick co-ords near the edge of the arena using the code from the create enemy function

14: look at how to transform shape for spawn in, maybe elongate, change colour, etc

11: wedge makes announcement on screen in some way, maybe sound

12: flesh out levels to load different backgrounds etc, and for enemies to be spawned inside the level class functions


15: make animations smarter to be maybe a dictionary linking to each part with a self.status instead of the nonsense it is now
so the path will be graphics/enemy/{self.status} or something like that, maybe don't need a dictionary
then can add status updates to various functions, e.g. bullet hit_detection, enemy.status = dead

15a: try to fix up player animate(), messy as fuck



18: change create_enemy to not be a while, but use if's to establish which side player is on and then do calculations
    using random.choice

20: player's hitbox works and is aligned, but is a bit wonky when diagonal. feels okay in gameplay
    don't necessarily need to fix





---- ideas ----
level 0: create a tutorial to teach controls, tell them to press buttons, if keys[pygame.K_Up], set passed = True etc
level: kill on impact - kill all enemies except bouncers, kill more than 2 bouncers = fail
level: guns broken, survive x seconds
level: don't shoot the bomb?
level: make a grid with xxxxx, do an x * pixel_size(image_width of enemy), for i in row, for j in column, to make a precision
    level of navigating through twirlers or something
level: twirlers come at you in waves, need to dodge them all to survive the timelimit
change boost to ram? single use item?
level: fast enemies, maybe bouncers? set self.speed to a variable, let variable be altered in level, give player fast-firing gun
level: big twirlers stretched to be very long, level of dodging between their blades
level: reaction test: player cannot move, wedges flying horizontally, have to press shoot, if wedge hits edge = game over

boss: create an enemy that can shoot back at you, give it a health bar and take multiple hits

level complete: warp point appears, go into warp point to end level
3: change bullets to be mouse click, not direction of ship (currently changed to arrow keys with limited shots)

menu: create rects for menu options, can either use mouse_down and colliderect, or have the player control the ship
    and shoot the options, with the bullet colliderecting the text rects